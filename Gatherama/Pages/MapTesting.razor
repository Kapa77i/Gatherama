@page "/maptesting"

@using Gatherama.Shared
@using Microsoft.Maui.Controls.Maps
@using Microsoft.Maui.Maps
@using System.Net.Http
@using System.Text.Json
@using System.Net.Http.Json;
@using System
@using System.Threading.Tasks
@using Microsoft.Maui.Controls
@using Gatherama.Services

@inject IJSRuntime JS

@inject ApiService apiService




<h1>Add Gathering Spot</h1>

<p>Here you can add your new gathering spot!</p>


<head>
    <title>Simple Marker</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBBJYKuoWVsb2MFdchEYIihbAb3pN0fFUg&callback=initMap&libraries=&v=weekly" defer></script>
    <link rel="stylesheet" href="./style.css" />
    <script src="./app.js"></script>

    <script>

        function initMap() {
            var myLatLng = {

                lat: 62.8893928527832,
                lng: 27.6920166015625
            };

            const geocoder = new google.maps.Geocoder();

            const map = new google.maps.Map(document.getElementById("googleMap"), {
                zoom: 14,
                center: myLatLng,
                IsShowingUser: true, //turha
                fullscreenControl: false,
                zoomControl: true,
                streetViewControl: false
            });         

            const mush_icon = '../Images_index/mushroom_icon.png';
            const berry_icon = '../Images_index/berry_icon.png';

            //tarvitaan for each looppi jokaiselle tietokannan markkerille/lokaatiolla, jossa on haluttu käyttäjä ja kavereiden jakamat

            //testimarker
            var mush_marker = new google.maps.Marker({
                position: myLatLng,
                map,
                icon: {
                    url: mush_icon,
                    scaledSize: new google.maps.Size(36, 36)
                },
                title: "Finding",
                pickable: true

            });

            //toinen testimarker

            const berry_marker = new google.maps.Marker({
                position: { lat: 62.908551, lng: 27.659310 },
                map,
                icon: {
                    url: berry_icon,
                    scaledSize: new google.maps.Size(46, 46)
                },
                title: "BERRIES!"
            });

            //
            map.addListener("click", (e) => {
                placeMarkerAndPanTo(e.latLng, map, geocoder);
                //geocodeLatLng(e.latLng, geocoder, map);
            });

            //To pan to current location
            const locationButton = document.createElement("button");

            locationButton.textContent = "Pan to Current Location";
            locationButton.classList.add("custom-map-control-button");
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
            locationButton.addEventListener("click", () => {
                // Try HTML5 geolocation.
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };

                            window.alert("Position is: " + pos);
                           // window.alert("Location found.");
                            //infoWindow.open(map);
                            map.setCenter(pos);
                        },
                        () => {
                            handleLocationError(true, infoWindow, map.getCenter());
                        },
                    );
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }
            });

        }

         function placeMarkerAndPanTo(latLng, map, geocoder) {
            newMarker = new google.maps.Marker({
                position: latLng,
                map: map,
            });

            map.panTo(latLng);
            setLocationData(latLng.lat(), latLng.lng()); // Set location data in the hidden input
           // window.alert("Tultiin geocodeen: " + latLng)
            const latilng = {
                lat: parseFloat(latLng.lat()),
                lng: parseFloat(latLng.lng()),
            };


            geocoder
                .geocode({ location: latilng })
                .then((response) => {
                    if (response && response.results && response.results.length > 0) {
                        const formattedAddress =
                            response.results[3].formatted_address;
                        const latlngStr = formattedAddress.split(",", 2);
                        const cityCountry = {
                            city: latlngStr[0],
                            country: latlngStr[1],
                        };
                        document.getElementById("city").value = cityCountry.city;
                        document.getElementById("country").value = cityCountry.country;
                    } else {
                        window.alert("No results found");
                    }
                })
                .catch((e) =>
                    window.alert("Geocoder failed due to: " + e.message || "Unknown error")
                );

            return newMarker;

        }

        function setLocationData(lat, lng) {
            const locationData = {
                lat: lat,
                lng: lng
            };
            document.getElementById("lat").value = JSON.stringify(locationData.lat);
            document.getElementById("lng").value = JSON.stringify(locationData.lng);
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation.",
            );
            infoWindow.open(map);
        }
       


        window.initMap = initMap;

    </script>
</head>
<body>
    <div>
        <div>
            <input type="text" id="lat" placeholder="Lat" /> <!-- Vain double arvot sopivia -->
            <input type="text" id="lng" placeholder="Long"  />
            <input type="text" id="city" placeholder="City" />
            <input type="text" id="country" placeholder="Country" />
        </div>

        <div id="googleMap" style="width:100%;height:400px;"></div>

    </div>

</body>




@code {
    //GOOGLE MAPS API KEY (KATA): AIzaSyBBJYKuoWVsb2MFdchEYIihbAb3pN0fFUg

   
}
